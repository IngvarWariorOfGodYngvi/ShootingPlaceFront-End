{"code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[52],{\"6c28\":function(e,t,i){\"use strict\";i.r(t);var s=function(){var e=this,t=e._self._c;return t(\"div\",[e._v(e._s(e.getCompetitionName())+\"\\n  \"),t(\"q-btn\",{attrs:{color:\"secondary\",label:\"Kreator konkurencji\"},on:{click:function(t){e.load(),e.createNewCompetiton=!0}}}),t(\"q-dialog\",{model:{value:e.createNewCompetiton,callback:function(t){e.createNewCompetiton=t},expression:\"createNewCompetiton\"}},[t(\"q-card\",{staticClass:\"bg-dark text-positive\",staticStyle:{\"min-width\":\"65vw\",height:\"80vh\"}},[t(\"q-card-section\",{staticClass:\"col items-center\"},[t(\"div\",{staticClass:\"col\"},[t(\"b\",[e._v(\"Rodzaj Konkurencji\")]),t(\"br\"),t(\"q-radio\",{attrs:{val:!0,label:\"Statyczna\"},on:{input:function(t){\"IPSC\"==e.countingMethod&&(e.countingMethod=\"NORMAL\"),e.discipline=\"\",e.disciplines=[]}},model:{value:e.type,callback:function(t){e.type=t},expression:\"type\"}}),t(\"q-radio\",{attrs:{val:!1,label:\"Dynamiczna\"},on:{input:function(t){e.countingMethod=\"COMSTOCK\",e.discipline=\"\",e.disciplines=[]}},model:{value:e.type,callback:function(t){e.type=t},expression:\"type\"}})],1),t(\"div\",{staticClass:\"col\"},[t(\"b\",[e._v(\"Odległość \"+e._s(e.range)+\"m\")]),t(\"q-slider\",{staticClass:\"q-pa-md\",attrs:{min:0,max:300,step:1,\"marker-labels\":\"\",snap:\"\",label:\"\",color:\"primary\"},scopedSlots:e._u([{key:\"marker-label-group\",fn:function({markerList:i}){return e._l([10,25,50,300],(function(s){return t(\"div\",{key:s,staticClass:\"cursor-pointer bg-primary round text-white text-center\",class:i[s].classes,staticStyle:{width:\"3vw\"},style:i[s].style,on:{click:function(t){e.range=s}}},[e._v(e._s(s+\"m\"))])}))}}]),model:{value:e.range,callback:function(t){e.range=t},expression:\"range\"}})],1),e.type?t(\"div\",[t(\"b\",[e._v(\"Metoda Liczenia\")]),t(\"br\"),e._l(e.countingMethods.filter((e=>\"IPSC\"!=e)),(function(i,s){return t(\"q-radio\",{key:s,staticClass:\"q-pl-xs\",attrs:{val:i,label:i,color:\"primary\"},model:{value:e.countingMethod,callback:function(t){e.countingMethod=t},expression:\"countingMethod\"}})}))],2):e._e(),e.type?e._e():t(\"div\",[t(\"b\",[e._v(\"Metoda Liczenia\")]),t(\"br\"),e._l(e.countingMethods.filter((e=>\"NORMAL\"!=e)),(function(i,s){return t(\"q-radio\",{key:s,staticClass:\"q-pl-xs\",attrs:{val:i,label:i,color:\"primary\"},on:{input:function(t){\"IPSC\"==e.countingMethod&&(e.competitionType=\"MINOR\")}},model:{value:e.countingMethod,callback:function(t){e.countingMethod=t},expression:\"countingMethod\"}})}))],2),e.type?t(\"div\",[t(\"b\",[e._v(\"Dyscyplina (wybierz 1)\")]),t(\"br\"),e._l(e.disciplinesList,(function(i,s){return t(\"q-radio\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.discipline,callback:function(t){e.discipline=t},expression:\"discipline\"}})}))],2):e._e(),t(\"div\",{staticClass:\"col\"},[e.type&&\"Pistolet\"==e.discipline?t(\"div\",e._l(e.helpersPistol,(function(i,s){return t(\"q-checkbox\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.helperPistol,callback:function(t){e.helperPistol=t},expression:\"helperPistol\"}})})),1):e._e(),e.type&&\"Karabin\"==e.discipline?t(\"div\",e._l(e.helpersRifle,(function(i,s){return t(\"q-checkbox\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.helperRifle,callback:function(t){e.helperRifle=t},expression:\"helperRifle\"}})})),1):e._e(),e.type&&\"Strzelba\"==e.discipline?t(\"div\",e._l(e.helpersShotgun,(function(i,s){return t(\"q-checkbox\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.helperShotgun,callback:function(t){e.helperShotgun=t},expression:\"helperShotgun\"}})})),1):e._e()]),e.type?e._e():t(\"div\",[t(\"b\",[e._v(\"Dyscypliny (możesz wybrać wiele)\")]),t(\"br\"),e._l(e.disciplinesList,(function(i,s){return t(\"q-checkbox\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.disciplines,callback:function(t){e.disciplines=t},expression:\"disciplines\"}})}))],2),e.type?e._e():t(\"div\",e._l(e.disciplinesHelpers,(function(i,s){return t(\"q-checkbox\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.helperDisciplines,callback:function(t){e.helperDisciplines=t},expression:\"helperDisciplines\"}})})),1),e.disciplines.length<2?t(\"div\",[t(\"b\",[e._v(\"Kaliber\")]),t(\"q-select\",{attrs:{label:\"Wybierz kaliber\",color:\"white\",\"input-class\":\"text-white\",\"label-color\":\"white\",\"popup-content-class\":\"bg-dark text-positive\",\"option-value\":e=>\"\"!==e?Object(e.uuid).toString():\"\",\"option-label\":e=>\"\"!==e?Object(e.name).toString():\"\",\"emit-value\":\"\",\"map-options\":\"\",\"options-dense\":\"\",\"options-selected-class\":\"bg-negative text-positive\",\"bg-color\":\"primary\",filled:\"\",dense:\"\",\"use-input\":\"\",\"hide-selected\":\"\",\"fill-input\":\"\",options:e.calibers},on:{filter:e.filter},scopedSlots:e._u([{key:\"option\",fn:function(i){return[t(\"q-item\",e._g(e._b({staticClass:\"rounded\",staticStyle:{padding:\"0\",margin:\"0\"},attrs:{dense:\"\"}},\"q-item\",i[\"itemProps\"],!1),i.itemEvents),[t(\"q-item-section\",{staticStyle:{padding:\"0.5em\",margin:\"0\"}},[t(\"div\",[e._v(e._s(i.opt.name)+\"\\n              \")])])],1)]}},{key:\"no-option\",fn:function(){return[t(\"q-item\",[t(\"q-item-section\",{staticClass:\"text-grey\"},[e._v(\"\\n              Brak wyników\\n            \")])],1)]},proxy:!0}],null,!1,2977162869),model:{value:e.caliber,callback:function(t){e.caliber=t},expression:\"caliber\"}})],1):e._e(),\"IPSC\"==e.countingMethod?t(\"div\",[t(\"b\",[e._v(\"Rodzaj\")]),t(\"br\"),e._l(e.competitionTypes.filter((e=>\"MINOR\"===e||\"MAJOR\"===e)),(function(i,s){return t(\"q-radio\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.competitionType,callback:function(t){e.competitionType=t},expression:\"competitionType\"}})}))],2):e._e(),\"IPSC\"!=e.countingMethod?t(\"div\",[t(\"b\",[e._v(\"Rodzaj\")]),t(\"br\"),e._l(e.competitionTypes.filter((e=>\"MINOR\"!=e&&\"MAJOR\"!=e)),(function(i,s){return t(\"q-radio\",{key:s,staticClass:\"q-pl-xs\",attrs:{dense:\"\",val:i,label:i},model:{value:e.competitionType,callback:function(t){e.competitionType=t},expression:\"competitionType\"}})}))],2):e._e(),e.disciplines.length<2?t(\"div\",[t(\"b\",[e._v(\"Ilość strzałów ocenianych \"+e._s(e.numberOfShots))]),t(\"br\"),t(\"q-slider\",{staticClass:\"q-pa-md\",attrs:{dense:\"\",min:0,max:300,step:1,snap:\"\",label:\"\",color:\"primary\"},model:{value:e.numberOfShots,callback:function(t){e.numberOfShots=t},expression:\"numberOfShots\"}})],1):e._e(),e.type?t(\"div\",[t(\"b\",[e._v(\"Ilość strzałów próbnych \"+e._s(e.practiceShots))]),t(\"br\"),t(\"q-slider\",{staticClass:\"q-pa-md\",attrs:{dense:\"\",min:0,max:300,step:1,snap:\"\",label:\"\",color:\"primary\"},model:{value:e.practiceShots,callback:function(t){e.practiceShots=t},expression:\"practiceShots\"}})],1):e._e(),t(\"div\",[t(\"b\",[e._v(\"Nazwa Konkurencji\")]),e.stop?t(\"div\",{staticClass:\"text-caption hover1\",on:{click:function(t){e.stop=!e.stop}}},[e._v(\"przywróć edytowanie\")]):e._e(),t(\"br\"),t(\"q-input\",{attrs:{dense:\"\",\"stack-label\":\"\",\"input-class\":\"text-positive\",filled:\"\",label:\"* Edytujac nazwę zablokujesz jej generowanie\",\"label-color\":\"positive\"},on:{click:function(t){e.stop=!0}},model:{value:e.name,callback:function(t){e.name=t},expression:\"name\"}})],1)]),t(\"q-card-section\",[t(\"div\",[t(\"q-btn\",{directives:[{name:\"close-popup\",rawName:\"v-close-popup\"}],attrs:{color:\"primary\",label:\"zapisz\"},on:{click:function(t){return e.createCompetition()}}}),t(\"q-btn\",{directives:[{name:\"close-popup\",rawName:\"v-close-popup\"}],attrs:{color:\"secondary\",label:\"anuluj\"}})],1)])],1)],1),t(\"q-dialog\",{attrs:{position:\"top\"},model:{value:e.success,callback:function(t){e.success=t},expression:\"success\"}},[t(\"q-card\",[t(\"q-card-section\",[null!=e.message?t(\"div\",{staticClass:\"text-h6\"},[e._v(e._s(e.message))]):e._e()])],1)],1),t(\"q-dialog\",{attrs:{position:\"standard\"},model:{value:e.failure,callback:function(t){e.failure=t},expression:\"failure\"}},[t(\"q-card\",{staticClass:\"bg-warning\"},[t(\"q-card-section\",[t(\"div\",{staticClass:\"text-h6\"},[e._v(e._s(e.message))])])],1)],1)],1)},n=[],o=(i(\"caad\"),i(\"5319\"),i(\"3dfd\")),l=i(\"2b0e\"),a={setup(){const e=Object(l[\"ref\"])([!1]),t=Object(l[\"ref\"])(!1);function i(t){e.value[t]=!0,this.addMemberToCompetition(),setTimeout((()=>{e.value[t]=!1}),0)}function s(t,i,s){e.value[t]=!0,this.addGunToList(i,s),setTimeout((()=>{e.value[t]=!1}),0)}return{loading:e,progress:t,simulateProgress:i,simulateProgressGun:s}},data(){return{name:\"\",createNewCompetiton:!1,countingMethods:[],disciplinesList:[],competitionTypes:[],calibers:[],range:0,countingMethod:\"\",discipline:\"\",disciplines:[],caliber:\"\",numberOfShots:0,practiceShots:0,type:!0,competitionType:\"\",helpersPistol:[\"pneumatyczny\",\"sportowy\",\"bocznego zapłonu\",\"centralnego zapłonu\",\"maszynowy\",\"dynamiczny\",\"z optyką\",\"rewolwer\"],helpersRifle:[\"pneumatyczny\",\"sportowy\",\"bocznego zapłonu\",\"centralnego zapłonu\",\"maszynowy\",\"dynamiczny\",\"z optyką\"],helpersShotgun:[\"dynamiczna\",\"tarcza\",\"popery\",\"automat\",\"pump-action\",\"z optyką\"],disciplinesHelpers:[\"Tor\"],helperPistol:[],helperRifle:[],helperShotgun:[],helperDisciplines:[],stop:!1,message:null,success:!1,failure:!1,shootingPlace:o[\"default\"].shootingPlace,local:o[\"default\"].host}},methods:{load(){this.getCountingMethods(),this.getDisciplines(),this.getListCalibers(),this.getCompetitionTypes()},getCountingMethods(){fetch(`${this.local}/competition/getCountingMethods`,{method:\"GET\"}).then((e=>e.json())).then((e=>{this.countingMethods=e,this.countingMethod=e[0]}))},getDisciplines(){fetch(`${this.local}/competition/getDisciplines`,{method:\"GET\"}).then((e=>e.json())).then((e=>{this.disciplinesList=e}))},getCompetitionTypes(){fetch(`${this.local}/competition/getCompetitionTypes`,{method:\"GET\"}).then((e=>e.json())).then((e=>{this.competitionTypes=e}))},getListCalibers(){fetch(`${this.local}/armory/calibers`,{method:\"GET\"}).then((e=>e.json())).then((e=>{this.calibers=e}))},getCompetitionName(){this.stop||(this.type&&\"Pistolet\"===this.discipline&&(this.name=`${this.range>0?this.range+\"m\":\"\"} ${this.helperPistol.includes(\"rewolwer\")?\"Rewolwer\":this.discipline} ${this.helperPistol.includes(\"rewolwer\")?this.helperPistol.filter((e=>\"rewolwer\"!==e)).toString().replaceAll(/,/gi,\" \"):this.helperPistol.toString().replaceAll(/,/gi,\" \")} ${this.numberOfShots>0?this.numberOfShots+\" strzałów\":\"\"} ${this.competitionType}`),this.type&&\"Karabin\"===this.discipline&&(this.name=`${this.range>0?this.range+\"m\":\"\"} ${this.discipline} ${this.helperRifle.toString().replaceAll(/,/gi,\" \")} ${this.numberOfShots>0?this.numberOfShots+\" strzałów\":\"\"} ${this.competitionType}`),this.type&&\"Strzelba\"===this.discipline&&(this.name=`${this.range>0?this.range+\"m\":\"\"} ${this.discipline} ${this.helperShotgun.toString().replaceAll(/,/gi,\" \")} ${this.numberOfShots>0?this.numberOfShots+\" strzałów\":\"\"} ${this.competitionType}`),!this.type&&this.disciplines.length>0&&(this.name=`${this.range>0?this.range+\"m\":\"\"} ${this.disciplines.toString().replaceAll(/,/g,\" \")} ${this.helperDisciplines.toString().replaceAll(/,/g,\" \")} ${this.competitionType}`))},createCompetition(){const e=this.name;this.type&&(this.disciplines=[]),this.type||(this.discipline=null,this.disciplines.length>1&&(this.caliber=null,this.numberOfShots=0,this.practiceShots=0));const t={name:e,discipline:null!==this.discipline?this.discipline.replace(/ /g,\"\"):this.discipline,disciplines:this.disciplines,numberOfShots:this.numberOfShots,practiceShots:this.practiceShots,type:this.competitionType.replace(/ /,\"\"),countingMethod:this.countingMethod.replace(/ /,\"\"),numberOfManyShots:null,caliberUUID:this.caliber};fetch(`${this.local}/competition`,{method:\"POST\",body:JSON.stringify(t),headers:{\"Content-Type\":\"application/json\"}}).then((e=>{201===e.status?e.text().then((e=>{this.message=e,this.success=!0,this.$emit(\"createCompetition\"),this.autoClose()})):e.text().then((e=>{this.message=e,this.failure=!0,this.autoClose()}))}))},filter(e,t){t(\"\"!==e?()=>{const t=e.toLowerCase();this.calibers=this.calibers.filter((e=>e.name.toLowerCase().indexOf(t)>-1))}:()=>{const t=e.toLowerCase();this.calibers=this.calibers.filter((e=>e.name.toLowerCase().indexOf(t)>-1))})},autoClose(){setTimeout((()=>{this.message=null,this.success=!1,this.failure=!1}),2e3)}}},c=a,r=i(\"2877\"),p=i(\"9c40\"),h=i(\"24e8\"),d=i(\"f09f\"),u=i(\"a370\"),m=i(\"3786\"),b=i(\"c1d0\"),g=i(\"8f8e\"),y=i(\"ddd8\"),f=i(\"66e5\"),v=i(\"4074\"),k=i(\"27f9\"),C=i(\"7f67\"),S=i(\"eebe\"),_=i.n(S),x=Object(r[\"a\"])(c,s,n,!1,null,null,null);t[\"default\"]=x.exports;_()(x,\"components\",{QBtn:p[\"a\"],QDialog:h[\"a\"],QCard:d[\"a\"],QCardSection:u[\"a\"],QRadio:m[\"a\"],QSlider:b[\"a\"],QCheckbox:g[\"a\"],QSelect:y[\"a\"],QItem:f[\"a\"],QItemSection:v[\"a\"],QInput:k[\"a\"]}),_()(x,\"directives\",{ClosePopup:C[\"a\"]})}}]);","name":"js/52.3121eee6.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[52],{\n\n/***/ \"6c28\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tournament/CompetitionCreator.vue?vue&type=template&id=b0e53148&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', [_vm._v(_vm._s(_vm.getCompetitionName()) + \"\\n  \"), _c('q-btn', {\n    attrs: {\n      \"color\": \"secondary\",\n      \"label\": \"Kreator konkurencji\"\n    },\n    on: {\n      \"click\": function ($event) {\n        _vm.load();\n        _vm.createNewCompetiton = true;\n      }\n    }\n  }), _c('q-dialog', {\n    model: {\n      value: _vm.createNewCompetiton,\n      callback: function ($$v) {\n        _vm.createNewCompetiton = $$v;\n      },\n      expression: \"createNewCompetiton\"\n    }\n  }, [_c('q-card', {\n    staticClass: \"bg-dark text-positive\",\n    staticStyle: {\n      \"min-width\": \"65vw\",\n      \"height\": \"80vh\"\n    }\n  }, [_c('q-card-section', {\n    staticClass: \"col items-center\"\n  }, [_c('div', {\n    staticClass: \"col\"\n  }, [_c('b', [_vm._v(\"Rodzaj Konkurencji\")]), _c('br'), _c('q-radio', {\n    attrs: {\n      \"val\": true,\n      \"label\": \"Statyczna\"\n    },\n    on: {\n      \"input\": function ($event) {\n        _vm.countingMethod == 'IPSC' ? _vm.countingMethod = 'NORMAL' : '';\n        _vm.discipline = '';\n        _vm.disciplines = [];\n      }\n    },\n    model: {\n      value: _vm.type,\n      callback: function ($$v) {\n        _vm.type = $$v;\n      },\n      expression: \"type\"\n    }\n  }), _c('q-radio', {\n    attrs: {\n      \"val\": false,\n      \"label\": \"Dynamiczna\"\n    },\n    on: {\n      \"input\": function ($event) {\n        _vm.countingMethod = 'COMSTOCK';\n        _vm.discipline = '';\n        _vm.disciplines = [];\n      }\n    },\n    model: {\n      value: _vm.type,\n      callback: function ($$v) {\n        _vm.type = $$v;\n      },\n      expression: \"type\"\n    }\n  })], 1), _c('div', {\n    staticClass: \"col\"\n  }, [_c('b', [_vm._v(\"Odległość \" + _vm._s(_vm.range) + \"m\")]), _c('q-slider', {\n    staticClass: \"q-pa-md\",\n    attrs: {\n      \"min\": 0,\n      \"max\": 300,\n      \"step\": 1,\n      \"marker-labels\": \"\",\n      \"snap\": \"\",\n      \"label\": \"\",\n      \"color\": \"primary\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"marker-label-group\",\n      fn: function ({\n        markerList\n      }) {\n        return _vm._l([10, 25, 50, 300], function (val) {\n          return _c('div', {\n            key: val,\n            staticClass: \"cursor-pointer bg-primary round text-white text-center\",\n            class: markerList[val].classes,\n            staticStyle: {\n              \"width\": \"3vw\"\n            },\n            style: markerList[val].style,\n            on: {\n              \"click\": function ($event) {\n                _vm.range = val;\n              }\n            }\n          }, [_vm._v(_vm._s(val + 'm'))]);\n        });\n      }\n    }]),\n    model: {\n      value: _vm.range,\n      callback: function ($$v) {\n        _vm.range = $$v;\n      },\n      expression: \"range\"\n    }\n  })], 1), _vm.type ? _c('div', [_c('b', [_vm._v(\"Metoda Liczenia\")]), _c('br'), _vm._l(_vm.countingMethods.filter(f => f != 'IPSC'), function (item, index) {\n    return _c('q-radio', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"val\": item,\n        \"label\": item,\n        \"color\": \"primary\"\n      },\n      model: {\n        value: _vm.countingMethod,\n        callback: function ($$v) {\n          _vm.countingMethod = $$v;\n        },\n        expression: \"countingMethod\"\n      }\n    });\n  })], 2) : _vm._e(), !_vm.type ? _c('div', [_c('b', [_vm._v(\"Metoda Liczenia\")]), _c('br'), _vm._l(_vm.countingMethods.filter(f => f != 'NORMAL'), function (item, index) {\n    return _c('q-radio', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"val\": item,\n        \"label\": item,\n        \"color\": \"primary\"\n      },\n      on: {\n        \"input\": function ($event) {\n          _vm.countingMethod == 'IPSC' ? _vm.competitionType = 'MINOR' : '';\n        }\n      },\n      model: {\n        value: _vm.countingMethod,\n        callback: function ($$v) {\n          _vm.countingMethod = $$v;\n        },\n        expression: \"countingMethod\"\n      }\n    });\n  })], 2) : _vm._e(), _vm.type ? _c('div', [_c('b', [_vm._v(\"Dyscyplina (wybierz 1)\")]), _c('br'), _vm._l(_vm.disciplinesList, function (item, index) {\n    return _c('q-radio', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.discipline,\n        callback: function ($$v) {\n          _vm.discipline = $$v;\n        },\n        expression: \"discipline\"\n      }\n    });\n  })], 2) : _vm._e(), _c('div', {\n    staticClass: \"col\"\n  }, [_vm.type && _vm.discipline == 'Pistolet' ? _c('div', _vm._l(_vm.helpersPistol, function (item, index) {\n    return _c('q-checkbox', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.helperPistol,\n        callback: function ($$v) {\n          _vm.helperPistol = $$v;\n        },\n        expression: \"helperPistol\"\n      }\n    });\n  }), 1) : _vm._e(), _vm.type && _vm.discipline == 'Karabin' ? _c('div', _vm._l(_vm.helpersRifle, function (item, index) {\n    return _c('q-checkbox', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.helperRifle,\n        callback: function ($$v) {\n          _vm.helperRifle = $$v;\n        },\n        expression: \"helperRifle\"\n      }\n    });\n  }), 1) : _vm._e(), _vm.type && _vm.discipline == 'Strzelba' ? _c('div', _vm._l(_vm.helpersShotgun, function (item, index) {\n    return _c('q-checkbox', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.helperShotgun,\n        callback: function ($$v) {\n          _vm.helperShotgun = $$v;\n        },\n        expression: \"helperShotgun\"\n      }\n    });\n  }), 1) : _vm._e()]), !_vm.type ? _c('div', [_c('b', [_vm._v(\"Dyscypliny (możesz wybrać wiele)\")]), _c('br'), _vm._l(_vm.disciplinesList, function (item, index) {\n    return _c('q-checkbox', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.disciplines,\n        callback: function ($$v) {\n          _vm.disciplines = $$v;\n        },\n        expression: \"disciplines\"\n      }\n    });\n  })], 2) : _vm._e(), !_vm.type ? _c('div', _vm._l(_vm.disciplinesHelpers, function (item, index) {\n    return _c('q-checkbox', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.helperDisciplines,\n        callback: function ($$v) {\n          _vm.helperDisciplines = $$v;\n        },\n        expression: \"helperDisciplines\"\n      }\n    });\n  }), 1) : _vm._e(), _vm.disciplines.length < 2 ? _c('div', [_c('b', [_vm._v(\"Kaliber\")]), _c('q-select', {\n    attrs: {\n      \"label\": \"Wybierz kaliber\",\n      \"color\": \"white\",\n      \"input-class\": \"text-white\",\n      \"label-color\": \"white\",\n      \"popup-content-class\": \"bg-dark text-positive\",\n      \"option-value\": opt => opt !== '' ? Object(opt.uuid).toString() : '',\n      \"option-label\": opt => opt !== '' ? Object(opt.name).toString() : '',\n      \"emit-value\": \"\",\n      \"map-options\": \"\",\n      \"options-dense\": \"\",\n      \"options-selected-class\": \"bg-negative text-positive\",\n      \"bg-color\": \"primary\",\n      \"filled\": \"\",\n      \"dense\": \"\",\n      \"use-input\": \"\",\n      \"hide-selected\": \"\",\n      \"fill-input\": \"\",\n      \"options\": _vm.calibers\n    },\n    on: {\n      \"filter\": _vm.filter\n    },\n    scopedSlots: _vm._u([{\n      key: \"option\",\n      fn: function (option) {\n        return [_c('q-item', _vm._g(_vm._b({\n          staticClass: \"rounded\",\n          staticStyle: {\n            \"padding\": \"0\",\n            \"margin\": \"0\"\n          },\n          attrs: {\n            \"dense\": \"\"\n          }\n        }, 'q-item', option['itemProps'], false), option.itemEvents), [_c('q-item-section', {\n          staticStyle: {\n            \"padding\": \"0.5em\",\n            \"margin\": \"0\"\n          }\n        }, [_c('div', [_vm._v(_vm._s(option.opt.name) + \"\\n              \")])])], 1)];\n      }\n    }, {\n      key: \"no-option\",\n      fn: function () {\n        return [_c('q-item', [_c('q-item-section', {\n          staticClass: \"text-grey\"\n        }, [_vm._v(\"\\n              Brak wyników\\n            \")])], 1)];\n      },\n      proxy: true\n    }], null, false, 2977162869),\n    model: {\n      value: _vm.caliber,\n      callback: function ($$v) {\n        _vm.caliber = $$v;\n      },\n      expression: \"caliber\"\n    }\n  })], 1) : _vm._e(), _vm.countingMethod == 'IPSC' ? _c('div', [_c('b', [_vm._v(\"Rodzaj\")]), _c('br'), _vm._l(_vm.competitionTypes.filter(f => f === 'MINOR' || f === 'MAJOR'), function (item, index) {\n    return _c('q-radio', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.competitionType,\n        callback: function ($$v) {\n          _vm.competitionType = $$v;\n        },\n        expression: \"competitionType\"\n      }\n    });\n  })], 2) : _vm._e(), _vm.countingMethod != 'IPSC' ? _c('div', [_c('b', [_vm._v(\"Rodzaj\")]), _c('br'), _vm._l(_vm.competitionTypes.filter(f => f != 'MINOR' && f != 'MAJOR'), function (item, index) {\n    return _c('q-radio', {\n      key: index,\n      staticClass: \"q-pl-xs\",\n      attrs: {\n        \"dense\": \"\",\n        \"val\": item,\n        \"label\": item\n      },\n      model: {\n        value: _vm.competitionType,\n        callback: function ($$v) {\n          _vm.competitionType = $$v;\n        },\n        expression: \"competitionType\"\n      }\n    });\n  })], 2) : _vm._e(), _vm.disciplines.length < 2 ? _c('div', [_c('b', [_vm._v(\"Ilość strzałów ocenianych \" + _vm._s(_vm.numberOfShots))]), _c('br'), _c('q-slider', {\n    staticClass: \"q-pa-md\",\n    attrs: {\n      \"dense\": \"\",\n      \"min\": 0,\n      \"max\": 300,\n      \"step\": 1,\n      \"snap\": \"\",\n      \"label\": \"\",\n      \"color\": \"primary\"\n    },\n    model: {\n      value: _vm.numberOfShots,\n      callback: function ($$v) {\n        _vm.numberOfShots = $$v;\n      },\n      expression: \"numberOfShots\"\n    }\n  })], 1) : _vm._e(), _vm.type ? _c('div', [_c('b', [_vm._v(\"Ilość strzałów próbnych \" + _vm._s(_vm.practiceShots))]), _c('br'), _c('q-slider', {\n    staticClass: \"q-pa-md\",\n    attrs: {\n      \"dense\": \"\",\n      \"min\": 0,\n      \"max\": 300,\n      \"step\": 1,\n      \"snap\": \"\",\n      \"label\": \"\",\n      \"color\": \"primary\"\n    },\n    model: {\n      value: _vm.practiceShots,\n      callback: function ($$v) {\n        _vm.practiceShots = $$v;\n      },\n      expression: \"practiceShots\"\n    }\n  })], 1) : _vm._e(), _c('div', [_c('b', [_vm._v(\"Nazwa Konkurencji\")]), _vm.stop ? _c('div', {\n    staticClass: \"text-caption hover1\",\n    on: {\n      \"click\": function ($event) {\n        _vm.stop = !_vm.stop;\n      }\n    }\n  }, [_vm._v(\"przywróć edytowanie\")]) : _vm._e(), _c('br'), _c('q-input', {\n    attrs: {\n      \"dense\": \"\",\n      \"stack-label\": \"\",\n      \"input-class\": \"text-positive\",\n      \"filled\": \"\",\n      \"label\": \"* Edytujac nazwę zablokujesz jej generowanie\",\n      \"label-color\": \"positive\"\n    },\n    on: {\n      \"click\": function ($event) {\n        _vm.stop = true;\n      }\n    },\n    model: {\n      value: _vm.name,\n      callback: function ($$v) {\n        _vm.name = $$v;\n      },\n      expression: \"name\"\n    }\n  })], 1)]), _c('q-card-section', [_c('div', [_c('q-btn', {\n    directives: [{\n      name: \"close-popup\",\n      rawName: \"v-close-popup\"\n    }],\n    attrs: {\n      \"color\": \"primary\",\n      \"label\": \"zapisz\"\n    },\n    on: {\n      \"click\": function ($event) {\n        return _vm.createCompetition();\n      }\n    }\n  }), _c('q-btn', {\n    directives: [{\n      name: \"close-popup\",\n      rawName: \"v-close-popup\"\n    }],\n    attrs: {\n      \"color\": \"secondary\",\n      \"label\": \"anuluj\"\n    }\n  })], 1)])], 1)], 1), _c('q-dialog', {\n    attrs: {\n      \"position\": \"top\"\n    },\n    model: {\n      value: _vm.success,\n      callback: function ($$v) {\n        _vm.success = $$v;\n      },\n      expression: \"success\"\n    }\n  }, [_c('q-card', [_c('q-card-section', [_vm.message != null ? _c('div', {\n    staticClass: \"text-h6\"\n  }, [_vm._v(_vm._s(_vm.message))]) : _vm._e()])], 1)], 1), _c('q-dialog', {\n    attrs: {\n      \"position\": \"standard\"\n    },\n    model: {\n      value: _vm.failure,\n      callback: function ($$v) {\n        _vm.failure = $$v;\n      },\n      expression: \"failure\"\n    }\n  }, [_c('q-card', {\n    staticClass: \"bg-warning\"\n  }, [_c('q-card-section', [_c('div', {\n    staticClass: \"text-h6\"\n  }, [_vm._v(_vm._s(_vm.message))])])], 1)], 1)], 1);\n};\nvar staticRenderFns = [];\n\n// CONCATENATED MODULE: ./src/components/tournament/CompetitionCreator.vue?vue&type=template&id=b0e53148&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(\"caad\");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(\"5319\");\n\n// EXTERNAL MODULE: ./src/App.vue + 4 modules\nvar App = __webpack_require__(\"3dfd\");\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(\"2b0e\");\n\n// CONCATENATED MODULE: ./node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!./node_modules/babel-loader/lib??ref--2-0!./node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tournament/CompetitionCreator.vue?vue&type=script&lang=js&\n\n\n\n\n/* harmony default export */ var CompetitionCreatorvue_type_script_lang_js_ = ({\n  setup() {\n    const loading = Object(vue_runtime_esm[\"ref\"])([false]);\n    const progress = Object(vue_runtime_esm[\"ref\"])(false);\n    function simulateProgress(number) {\n      loading.value[number] = true;\n      this.addMemberToCompetition();\n      setTimeout(() => {\n        loading.value[number] = false;\n      }, 0);\n    }\n    function simulateProgressGun(number, evidenceUUID, barcode) {\n      loading.value[number] = true;\n      this.addGunToList(evidenceUUID, barcode);\n      setTimeout(() => {\n        loading.value[number] = false;\n      }, 0);\n    }\n    return {\n      loading,\n      progress,\n      simulateProgress,\n      simulateProgressGun\n    };\n  },\n  data() {\n    return {\n      name: '',\n      createNewCompetiton: false,\n      countingMethods: [],\n      disciplinesList: [],\n      competitionTypes: [],\n      calibers: [],\n      range: 0,\n      countingMethod: '',\n      discipline: '',\n      disciplines: [],\n      caliber: '',\n      numberOfShots: 0,\n      practiceShots: 0,\n      type: true,\n      competitionType: '',\n      helpersPistol: ['pneumatyczny', 'sportowy', 'bocznego zapłonu', 'centralnego zapłonu', 'maszynowy', 'dynamiczny', 'z optyką', 'rewolwer'],\n      helpersRifle: ['pneumatyczny', 'sportowy', 'bocznego zapłonu', 'centralnego zapłonu', 'maszynowy', 'dynamiczny', 'z optyką'],\n      helpersShotgun: ['dynamiczna', 'tarcza', 'popery', 'automat', 'pump-action', 'z optyką'],\n      disciplinesHelpers: ['Tor'],\n      helperPistol: [],\n      helperRifle: [],\n      helperShotgun: [],\n      helperDisciplines: [],\n      stop: false,\n      message: null,\n      success: false,\n      failure: false,\n      shootingPlace: App[\"default\"].shootingPlace,\n      local: App[\"default\"].host\n    };\n  },\n  methods: {\n    load() {\n      this.getCountingMethods();\n      this.getDisciplines();\n      this.getListCalibers();\n      this.getCompetitionTypes();\n    },\n    getCountingMethods() {\n      fetch(`${this.local}/competition/getCountingMethods`, {\n        method: 'GET'\n      }).then(response => response.json()).then(response => {\n        this.countingMethods = response;\n        this.countingMethod = response[0];\n      });\n    },\n    getDisciplines() {\n      fetch(`${this.local}/competition/getDisciplines`, {\n        method: 'GET'\n      }).then(response => response.json()).then(response => {\n        this.disciplinesList = response;\n      });\n    },\n    getCompetitionTypes() {\n      fetch(`${this.local}/competition/getCompetitionTypes`, {\n        method: 'GET'\n      }).then(response => response.json()).then(response => {\n        this.competitionTypes = response;\n      });\n    },\n    getListCalibers() {\n      fetch(`${this.local}/armory/calibers`, {\n        method: 'GET'\n      }).then(response => response.json()).then(response => {\n        this.calibers = response;\n      });\n    },\n    getCompetitionName() {\n      if (!this.stop) {\n        if (this.type && this.discipline === 'Pistolet') {\n          this.name = `${this.range > 0 ? this.range + 'm' : ''} ${this.helperPistol.includes('rewolwer') ? 'Rewolwer' : this.discipline} ${this.helperPistol.includes('rewolwer') ? this.helperPistol.filter(f => f !== 'rewolwer').toString().replaceAll(/,/gi, ' ') : this.helperPistol.toString().replaceAll(/,/gi, ' ')} ${this.numberOfShots > 0 ? this.numberOfShots + ' strzałów' : ''} ${this.competitionType}`;\n        }\n        if (this.type && this.discipline === 'Karabin') {\n          this.name = `${this.range > 0 ? this.range + 'm' : ''} ${this.discipline} ${this.helperRifle.toString().replaceAll(/,/gi, ' ')} ${this.numberOfShots > 0 ? this.numberOfShots + ' strzałów' : ''} ${this.competitionType}`;\n        }\n        if (this.type && this.discipline === 'Strzelba') {\n          this.name = `${this.range > 0 ? this.range + 'm' : ''} ${this.discipline} ${this.helperShotgun.toString().replaceAll(/,/gi, ' ')} ${this.numberOfShots > 0 ? this.numberOfShots + ' strzałów' : ''} ${this.competitionType}`;\n        }\n        if (!this.type && this.disciplines.length > 0) {\n          this.name = `${this.range > 0 ? this.range + 'm' : ''} ${this.disciplines.toString().replaceAll(/,/g, ' ')} ${this.helperDisciplines.toString().replaceAll(/,/g, ' ')} ${this.competitionType}`;\n        }\n      }\n    },\n    createCompetition() {\n      const name = this.name;\n      if (this.type) {\n        this.disciplines = [];\n      }\n      if (!this.type) {\n        this.discipline = null;\n        if (this.disciplines.length > 1) {\n          this.caliber = null;\n          this.numberOfShots = 0;\n          this.practiceShots = 0;\n        }\n      }\n      const data = {\n        name: name,\n        discipline: this.discipline !== null ? this.discipline.replace(/ /g, '') : this.discipline,\n        disciplines: this.disciplines,\n        numberOfShots: this.numberOfShots,\n        practiceShots: this.practiceShots,\n        type: this.competitionType.replace(/ /, ''),\n        countingMethod: this.countingMethod.replace(/ /, ''),\n        numberOfManyShots: null,\n        caliberUUID: this.caliber\n      };\n      fetch(`${this.local}/competition`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.status === 201) {\n          response.text().then(response => {\n            this.message = response;\n            this.success = true;\n            this.$emit('createCompetition');\n            this.autoClose();\n          });\n        } else {\n          response.text().then(response => {\n            this.message = response;\n            this.failure = true;\n            this.autoClose();\n          });\n        }\n      });\n    },\n    filter(val, update) {\n      if (val === '') {\n        update(() => {\n          const needle = val.toLowerCase();\n          this.calibers = this.calibers.filter(v => v.name.toLowerCase().indexOf(needle) > -1);\n        });\n        return;\n      }\n      update(() => {\n        const needle = val.toLowerCase();\n        this.calibers = this.calibers.filter(v => v.name.toLowerCase().indexOf(needle) > -1);\n      });\n    },\n    autoClose() {\n      setTimeout(() => {\n        this.message = null;\n        this.success = false;\n        this.failure = false;\n      }, 2000);\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/components/tournament/CompetitionCreator.vue?vue&type=script&lang=js&\n /* harmony default export */ var tournament_CompetitionCreatorvue_type_script_lang_js_ = (CompetitionCreatorvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(\"2877\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/btn/QBtn.js\nvar QBtn = __webpack_require__(\"9c40\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/dialog/QDialog.js\nvar QDialog = __webpack_require__(\"24e8\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/card/QCard.js\nvar QCard = __webpack_require__(\"f09f\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/card/QCardSection.js\nvar QCardSection = __webpack_require__(\"a370\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/radio/QRadio.js\nvar QRadio = __webpack_require__(\"3786\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/slider/QSlider.js + 1 modules\nvar QSlider = __webpack_require__(\"c1d0\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/checkbox/QCheckbox.js\nvar QCheckbox = __webpack_require__(\"8f8e\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/select/QSelect.js + 1 modules\nvar QSelect = __webpack_require__(\"ddd8\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/item/QItem.js\nvar QItem = __webpack_require__(\"66e5\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/item/QItemSection.js\nvar QItemSection = __webpack_require__(\"4074\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/components/input/QInput.js + 1 modules\nvar QInput = __webpack_require__(\"27f9\");\n\n// EXTERNAL MODULE: ./node_modules/quasar/src/directives/ClosePopup.js\nvar ClosePopup = __webpack_require__(\"7f67\");\n\n// EXTERNAL MODULE: ./node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\nvar runtime_auto_import = __webpack_require__(\"eebe\");\nvar runtime_auto_import_default = /*#__PURE__*/__webpack_require__.n(runtime_auto_import);\n\n// CONCATENATED MODULE: ./src/components/tournament/CompetitionCreator.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  tournament_CompetitionCreatorvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var CompetitionCreator = __webpack_exports__[\"default\"] = (component.exports);\n\n\n\n\n\n\n\n\n\n\n\n\nruntime_auto_import_default()(component, 'components', {QBtn: QBtn[\"a\" /* default */],QDialog: QDialog[\"a\" /* default */],QCard: QCard[\"a\" /* default */],QCardSection: QCardSection[\"a\" /* default */],QRadio: QRadio[\"a\" /* default */],QSlider: QSlider[\"a\" /* default */],QCheckbox: QCheckbox[\"a\" /* default */],QSelect: QSelect[\"a\" /* default */],QItem: QItem[\"a\" /* default */],QItemSection: QItemSection[\"a\" /* default */],QInput: QInput[\"a\" /* default */]});runtime_auto_import_default()(component, 'directives', {ClosePopup: ClosePopup[\"a\" /* default */]});\n\n\n/***/ })\n\n}]);","inputSourceMap":null}